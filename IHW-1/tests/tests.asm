.include "../macroses/services.s"
.include "../macroses/fill_array.s"
.include "../macroses/print_array.s"
.include "../additional.s"

.data
	test_1_A:	.space 40
	test_1_B: 	.space 40
	
	test_2_A:	.space 40
	test_2_B: 	.space 40
	
	test_3_A:	.space 40
	test_3_B: 	.space 40
	
	test_4_A:	.space 40
	test_4_B: 	.space 40
	
	
.global main
#			Сформировать массив B только из тех элементов массива , которые
#			не совпадают с его первым и последним элементами.


# 	Тестирование на четырех тестах
# 	Тест1: первый массив собран из одинаковых элементов
# 	Тест2: Массив А содержит один элемент
# 	Тест3: Массив А с различными элементами
# 	Тест4: Элемент первый равен третьему (как пример), остальные отличны от первого и последнего
.text
	main: 	# регистр s0 - указатель на А массив 
		# регистр s1 - указатель на В массив ожидаемый 
		# регистр s2 - длина А массива
		# регистр s3 - длина В массива ожидаемая
		
		
		print_str("Тест 1 \n")
		
		la	s0 test_1_A
		la	s1 test_1_B
		li 	s2 5
		li	s3 0
		
		li	s4 1
		
		# Заполняем массив А
		# 1 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 2 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 3 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 4 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 5 elem
		li	a0 1
		sw	a0 (s0)
		
		la	s0 test_3_A
		push (s2) # передаем на стек длину массива A
		push (s0) # передаем на стек указатель на начало массива А
		push (s1) # передаем на стек указтель на начало массива В
		#  получается стек состоит из: [len(a) - ptr(a) - ptr(b)
		make_b_array
		# в регистре a1 хранится длина 0, тк массив пустой
		bnez	a1 fail # проверка что длина массива В = 0 (потому что все элементы одинаковы)
			
		print_msg_with_number ("Тест пройден, номер - ", s4)
		# конец первого теста 
		
		addi 	s4 s4 1 # увеличиваем счетчик теста на + 1
		# ---------------------------------------------------------- конец теста 1
		
		
		print_str("Тест 2 \n")
		
		la	s0 test_2_A
		la	s1 test_2_B
		li 	s2 1
		li	s3 0
		
		# Заполняем массив А
		# 1 elem
		li	a0 1000 # положили в a0 1000 => единственный элемент массива А равный 1000
		sw	a0 (s0)
		addi	s0 s0 4
		
		la	s0 test_3_A
		push (s2) # передаем на стек длину массива A
		push (s0) # передаем на стек указатель на начало массива А
		push (s1) # передаем на стек указтель на начало массива В
		#  получается стек состоит из: [len(a) - ptr(a) - ptr(b)
		# основная логика программы
		make_b_array
		
		# в регистре a1 хранится длина 0, тк массив пустой
		bnez	a1 fail # проверка что длина массива В = 0 (потому что все элементы одинаковы)
			
		print_msg_with_number ("Тест пройден, номер - ", s4)
		
		addi 	s4 s4 1 # увеличиваем счетчик теста на + 1
		# ---------------------------------------------------------- конец теста 2
		
		print_str("Тест 3 \n")
		
		la	s0 test_3_A
		la	s1 test_3_B
		li 	s2 7
		li	s3 0
		
		# Заполняем массив А
		# 1 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 2 elem
		li	a0 11
		sw	a0 (s0)
		addi	s0 s0 4
		# 3 elem
		li	a0 111
		sw	a0 (s0)
		addi	s0 s0 4
		# 4 elem
		li	a0 1111
		sw	a0 (s0)
		addi	s0 s0 4
		# 5 elem
		li	a0 11111
		sw	a0 (s0)
		addi	s0 s0 4
		# 6 elem
		li	a0 111111
		sw	a0 (s0)
		addi	s0 s0 4
		# 7 elem
		li	a0 1111111
		sw	a0 (s0)
		addi	s0 s0 4
		# все элементы различные
		
		la	s0 test_3_A
		push (s2) # передаем на стек длину массива A
		push (s0) # передаем на стек указатель на начало массива А
		push (s1) # передаем на стек указтель на начало массива В
		#  получается стек состоит из: [len(a) - ptr(a) - ptr(b)
		
		make_b_array
		
		mv 	s3 a1 # получили длину B массива
		addi	s3 s3 2 # массив В получился на 2 меньше, что и логично (все элементы разные)
		
		bne	s3 s2 fail # проверка что длина массива В = 0 (потому что все элементы одинаковы)
		
		# проверка элементов 
		# восстанавливаем наши указатели
		la	s0 test_3_A
		la	s1 test_3_B
		
		addi	s0 s0 4 # первого элемента в массиве В быть не может
		
		#----------------1
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[0] == A[1]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		#----------------2
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[1] == A[2]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		#----------------3
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[2] == A[3]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		#----------------4
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[3] == A[4]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		#----------------5
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[4] == A[5]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		
		print_msg_with_number ("Тест пройден, номер - ", s4)
		# конец первого теста 
		
		addi 	s4 s4 1 # увеличиваем счетчик теста на + 1
		# ---------------------------------------------------------- конец теста 3
		
		print_str("Тест 4 \n")
		
		la	s0 test_3_A
		la	s1 test_3_B
		li 	s2 5
		li	s3 0
		
		# Заполняем массив А
		# 1 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 2 elem
		li	a0 2
		sw	a0 (s0)
		addi	s0 s0 4
		# 3 elem
		li	a0 1
		sw	a0 (s0)
		addi	s0 s0 4
		# 4 elem
		li	a0 4
		sw	a0 (s0)
		addi	s0 s0 4
		# 5 elem
		li	a0 5
		sw	a0 (s0)
		addi	s0 s0 4
		
		# все элементы различные A[0] == A[2] = 1
		
		la	s0 test_3_A
		push (s2) # передаем на стек длину массива A
		push (s0) # передаем на стек указатель на начало массива А
		push (s1) # передаем на стек указтель на начало массива В
		#  получается стек состоит из: [len(a) - ptr(a) - ptr(b)
		
		make_b_array
		
		mv 	s3 a1 # получили длину B массива
		addi	s3 s3 3 # массив В получился на 2 меньше, что и логично (все элементы разные)
		
		bne	s3 s2 fail # проверка что длина массива В = 0 (потому что все элементы одинаковы)
		
		# проверка элементов 
		# восстанавливаем наши указатели
		la	s0 test_3_A
		la	s1 test_3_B
		
		addi	s0 s0 4 # первого элемента в массиве В быть не может
		
		#----------------1
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[0] == A[1]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		#----------------2
		addi	s0 s0 4 # третий элемент равный первому
		#----------------3
		lw	t0 (s0)
		lw	t1 (s1) 
		
		bne 	t1 t0 fail # B[1] == A[3]
		
		addi	s0 s0 4
		addi 	s1 s1 4
		
		print_msg_with_number ("Тест пройден, номер - ", s4)
		# конец первого теста 
		
		addi 	s4 s4 1 # увеличиваем счетчик теста на + 1
		# ---------------------------------------------------------- конец теста 4
		
		# конец
		print_str("\nВсе тесты пройдены!\nПроизводится выход из программы")
		exit
	fail:
		print_msg_with_number ("Тест не пройден, номер - ", t6)
		print_str("Производится выход из программы")
		exit
		
		
		
	
